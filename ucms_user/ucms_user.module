<?php
/**
 * @file
 * ÂµCMS user management module.
 */


use MakinaCorpus\Ucms\Site\SiteState;
use MakinaCorpus\Ucms\User\UserAccess;


/**
 * Implements hook_menu().
 */
function ucms_user_menu() {
  $items = [];

  $items['admin/dashboard/user'] = [
    'title'             => 'Users',
    'page callback'     => 'ucms_user_dashboard_user_list',
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'ucms_user.dashboard.inc',
  ];

  $items['admin/dashboard/user/add'] = [
    'title'             => 'Create user',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserEdit'],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
  ];

  $items['admin/dashboard/user/%user'] = [
    'title callback'    => 'ucms_user_menu_item_title',
    'title arguments'   => [3],
    'page callback'     => 'ucms_user_dashboard_user_view',
    'page arguments'    => [3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'ucms_user.dashboard.inc',
  ];

  $items['admin/dashboard/user/%user/edit'] = [
    'title callback'   => 'ucms_user_menu_item_edit_title',
    'title arguments'  => [3],
    'title'            => 'Edit my account information',
    'page callback'    => 'sf_dic_page_form',
    'page arguments'   => ['MakinaCorpus\Ucms\User\Form\AccountEditForm', 3],
    'access callback'  => 'ucms_user_access_manage',
    'access arguments' => [UserAccess::PERM_MANAGE_ALL, 3],
    'type'             => MENU_CALLBACK,
  ];


  $items['admin/dashboard/user/%user/view'] = [
    'title'             => 'View',
    'type'              => MENU_DEFAULT_LOCAL_TASK,
    'weight'            => -10
  ];

  $items['admin/dashboard/user/%user/edit'] = [
    'title'             => 'Edit',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserEdit', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_LOCAL_TASK,
    'weight'            => -5
  ];

  return $items;
}


/**
 * Title callback form menu items.
 */
function ucms_user_menu_item_title($user) {
  return t("User @name", ['@name' => $user->name]);
}


/**
 * Title callback for edit account menu item.
 */
function ucms_user_menu_item_edit_title($account) {
  global $user;

  if ($user->uid == $account->uid) {
    return t("Edit my account information");
  }

  return t("Edit @name's account information", ['@name' => $account->name]);
}

/**
 * Access callback for edit account form.
 *
 * @param $perm
 * @param $account
 * @return bool
 */
function ucms_user_access_manage($perm, $account) {
  global $user;

  if ($user->uid == $account->uid) {
    return TRUE;
  }
  return user_access($perm);
}

/**
 * Implements hook_permission().
 */
function ucms_user_permission() {
  return [
    UserAccess::PERM_MANAGE_ALL => [
      'title' => t("Manage all users"),
    ],
  ];
}


/**
 * Implements hook_theme().
 */
function ucms_user_theme($existing, $type, $theme, $path) {
  return [
    'ucms_user_profile' => array(
      'variables' => ['account' => null],
      'template' => 'ucms-user-profile',
    ),
  ];
}


/**
 * Implements template_preprocess_THEME().
 */
function template_preprocess_ucms_user_profile(&$variables) {
  // User picture
  $variables['picture'] = [
    '#theme' => 'user_picture',
    '#account' => $variables['account'],
  ];

  // Details table
  $manager = \Drupal::service('ucms_site.manager');

  $roles = $variables['account']->roles;
  if (isset($roles[DRUPAL_AUTHENTICATED_RID])) {
    unset($roles[DRUPAL_AUTHENTICATED_RID]);
  }

  $sites = $manager->loadWebmasterSites($variables['account']->uid);
  $requests = [];

  foreach ($sites as $id => $site) {
    $uri = 'http://' . $site->http_host;
    $item = check_plain($site->title_admin) . ' (' . l($uri, $uri) . ')';

    if ($site->state == SiteState::REQUESTED) {
      $requests[] = $item;
      unset($sites[$id]);
    } else {
      $sites[$id] = $item;
    }
  }

  $sites = empty($sites) ? t("No site") : implode('<br/>', $sites);
  $requests = empty($requests) ? t("No pending request") : implode('<br/>', $requests);

  $variables['details_table'] = [
    '#theme' => 'table',
    '#rows' => [
      [['data' => t("Created at"), 'header' => true], format_date($variables['account']->created)],
      [['data' => t("Last connection at"), 'header' => true], format_date($variables['account']->login)],
      [['data' => t("Roles"), 'header' => true], implode('<br/>', $roles)],
      [['data' => t("Pending requests"), 'header' => true], $requests],
      [['data' => t("Sites"), 'header' => true], $sites],
    ],
  ];
}


/**
 * Implements hook_admin_paths().
 */
function ucms_user_admin_paths() {
  return [
    'user/*' => true,
  ];
}
