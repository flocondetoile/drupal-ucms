<?php
/**
 * @file
 * ÂµCMS user management module.
 */

use Drupal\Core\Session\AccountInterface;

use MakinaCorpus\Ucms\Site\SiteState;
use MakinaCorpus\Ucms\User\UserAccess;


/**
 * Implements hook_menu().
 */
function ucms_user_menu() {
  $items = [];

  $items['admin/dashboard/user'] = [
    'title'             => 'Users',
    'page callback'     => 'ucms_user_dashboard_user_list',
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'ucms_user.dashboard.inc',
  ];

  $items['admin/dashboard/user/add'] = [
    'title'             => 'Create user',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserEdit'],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
  ];

  $items['admin/dashboard/user/%user'] = [
    'title callback'    => 'ucms_user_menu_item_title',
    'title arguments'   => [3],
    'page callback'     => 'ucms_user_dashboard_user_view',
    'page arguments'    => [3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'ucms_user.dashboard.inc',
  ];

  $items['admin/dashboard/user/my-account'] = [
    'title'            => 'Edit my account information',
    'page callback'    => 'sf_dic_page_form',
    'page arguments'   => ['MakinaCorpus\Ucms\User\Form\AccountEditForm', 3],
    'access callback'  => TRUE,
    'type'             => MENU_CALLBACK,
  ];

  $items['admin/dashboard/user/%user/view'] = [
    'title'             => 'View',
    'type'              => MENU_DEFAULT_LOCAL_TASK,
    'weight'            => -20
  ];

  $items['admin/dashboard/user/%user/edit'] = [
    'title'             => 'Edit',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserEdit', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_LOCAL_TASK,
    'weight'            => -10
  ];

  $items['admin/dashboard/user/%user/reset-password'] = [
    'title'             => 'Reset password',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserResetPassword', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_LOCAL_TASK,
  ];

  $items['admin/dashboard/user/%user/delete'] = [
    'title'             => 'Delete',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserDelete', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_LOCAL_TASK,
    'weight'            => 100,
  ];

  $items['admin/dashboard/user/%user/enable'] = [
    'title'             => 'Enable the user',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserEnable', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_CALLBACK,
  ];

  $items['admin/dashboard/user/%user/disable'] = [
    'title'             => 'Disable the user',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserDisable', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_CALLBACK,
  ];

  $items['admin/dashboard/user/%user/change-email'] = [
    'title'             => 'Change email',
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\User\Form\UserChangeEmail', 3],
    'access arguments'  => [UserAccess::PERM_MANAGE_ALL],
    'type'              => MENU_CALLBACK,
  ];

  return $items;
}


/**
 * Title callback for menu items.
 */
function ucms_user_menu_item_title($user) {
  return t("User @name", ['@name' => $user->name]);
}


/**
 * Implements hook_permission().
 */
function ucms_user_permission() {
  return [
    UserAccess::PERM_MANAGE_ALL => [
      'title' => t("Manage all users"),
    ],
  ];
}


/**
 * Implements hook_theme().
 */
function ucms_user_theme($existing, $type, $theme, $path) {
  return [
    'ucms_user_profile' => array(
      'variables' => ['account' => null],
      'template' => 'ucms-user-profile',
    ),
  ];
}


/**
 * Implements template_preprocess_THEME().
 */
function template_preprocess_ucms_user_profile(&$variables) {
  $account = $variables['account'];

  // User picture
  $variables['picture'] = [
    '#theme' => 'user_picture',
    '#account' => $account,
  ];

  $manager = ucms_site_manager();

  /* @var $account AccountInterface */
  $access = $manager->getAccess();
  $roles = array_map(
    function ($role_id) use ($access) {
      return $access->getDrupalRoleName($role_id);
    },
    $account->getRoles(true)
  );

  $sites = $manager->loadWebmasterSites($account);
  $requests = [];
  foreach ($sites as $id => $site) {
    $site_name = l(check_plain($site->title_admin), 'admin/dashboard/site/' . $site->id);

    if ($site->state == SiteState::REQUESTED) {
      $requests[] = $site_name;
      unset($sites[$id]);
    }
    else {
      $role_name = $access->getRelativeRoleName($access->getUserRole($account, $site)
                                                       ->getRole());
      $sites[$id] = $site_name . ' (' . $role_name . ')';
    }
  }

  $roles = [
    '#theme'      => 'item_list',
    '#items'      => $roles,
    '#attributes' => ['class' => ['list-unstyled']],
    '#empty_list' => t("No role"),
  ];
  $sites = [
    '#theme'      => 'item_list',
    '#items'      => $sites,
    '#attributes' => ['class' => ['list-unstyled']],
    '#empty_list' => t("No site"),
  ];
  $requests = [
    '#theme'      => 'item_list',
    '#items'      => $requests,
    '#attributes' => ['class' => ['list-unstyled']],
    '#empty_list' => t("No pending request"),
  ];
  $last_connection = ($account->login > 0) ? format_date($account->login) : t("Never");

  $variables['details_table'] = [
    '#theme' => 'table',
    '#rows' => [
      [['data' => t("Created at"), 'header' => true], format_date($account->created)],
      [['data' => t("Last connection at"), 'header' => true], $last_connection],
      [['data' => t("Roles"), 'header' => true], $roles],
      [['data' => t("Pending requests"), 'header' => true], $requests],
      [['data' => t("Sites"), 'header' => true], $sites],
    ],
  ];
}


/**
 * Implements hook_admin_paths().
 */
function ucms_user_admin_paths() {
  return [
    'user/*' => true,
  ];
}
