<?php
/**
 * @file
 * ÂµCMS notifications module.
 *
 * This module has been separated from the rest in order to remain decoupled
 * from the APubSub notification system, and deactivable.
 *
 * @todo
 *   Handle role removal on users (role add is handled at login time)
 *
 * Complete list of channels we will use:
 *  - admin:client:   user account administration messages
 *  - admin:contenu:  content management messages
 *  - admin:label:    taxonomy management messages
 *  - admin:site:     site administration messages
 *  - client:X:       each user private messages
 *  - label:X:        each taxonomy term own channel
 *  - site:X:         each site management own channel
 */

use MakinaCorpus\Ucms\Notification\Access;
use MakinaCorpus\APubSub\Notification\EventDispatcher\ResourceEvent;

/**
 * Implements hook_permission().
 */
function ucms_notification_permission() {
  return [
    Access::PERM_NOTIF_CONTENT => [
      'title' => t("Receive content admin notifications"),
    ],
    Access::PERM_NOTIF_LABEL => [
      'title' => t("Receive label admin notifications"),
    ],
    Access::PERM_NOTIF_SEO => [
      'title' => t("Receive SEO admin notifications"),
    ],
    Access::PERM_NOTIF_SITE => [
      'title' => t("Receive site admin notifications"),
    ],
    Access::PERM_NOTIF_USER => [
      'title' => t("Receive user admin notifications"),
    ],
  ];
}

/**
 * Get custom notification service.
 *
 * @return \MakinaCorpus\Ucms\Notification\NotificationService
 *
 * @deprecated
 *   Only services should access other services.
 */
function ucms_notification_service() {
  return \Drupal::service('ucms_notification.service');
}

/**
 * Implements hook_user_login().
 */
function ucms_notification_user_login(&$edit, $account) {
  // This is called late at install, so filter out superadmin.
  if ($account->uid > 1) {
    ucms_notification_service()->refreshSubscriptionsFor($account->uid);
  }
}

/**
 * Implements hook_user_update().
 */
function ucms_notification_user_update(&$edit, $account, $category) {
  // This is called late at install, so filter out superadmin.
  if ($account->uid > 1 && $account->original && array_intersect_key($account->roles, $account->original->roles)) {
    ucms_notification_service()->refreshSubscriptionsFor($account->uid);
  }
}

/**
 * Implements hook_user_cancel().
 */
function ucms_notification_user_cancel($edit, $account, $method) {
  ucms_notification_service()->deleteSubscriptionsFor($account->uid);
}

/**
 * Implements hook_user_delete().
 */
function ucms_notification_user_delete($account) {
  ucms_notification_service()->deleteSubscriptionsFor($account->uid);
}

/**
 * Implements hook_node_insert().
 * Subscribe node author to its update.
 */
function ucms_notification_node_insert($node) {
  ucms_notification_service()->subscribe($node->uid, 'node:' . $node->nid);
}

/**
 * Implements hook_node_udpate().
 */
function ucms_notification_node_update($node) {
  notification_service_get()->notify('node', $node->nid, 'edit');
}

/**
 * Implements hook_node_delete().
 */
function ucms_notification_node_delete($node) {
  notification_service_get()->notify('node', $node->nid, 'delete');
}