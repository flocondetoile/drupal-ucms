<?php

/**
 * Implements hook_schema().
 */
function ucms_site_schema() {
  $schema = [];

  $schema['ucms_site'] = [
    'description' => 'Site instances',
    'fields' => [
      'id' => [
        'description' => "Site identifier",
        'type'        => 'serial',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'title_admin' => [
        'description' => 'Administrative title',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'title' => [
        'description' => 'Displayed title', 
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'state' => [
        'description' => "Site workflow state",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'type' => [
        'description' => "Site type",
        'type'        => 'varchar',
        'length'      => 64,
        'not null'    => false,
        'default'     => null,
      ],
      'theme' => [
        'description' => "Theme to use",
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => false,
        'default'     => null,
      ],
      'http_host' => [
        'description' => "Site domain name",
        'type'        => 'varchar',
        'length'      => 1024,
        'not null'    => false,
        'default'     => null,
      ],
      'relacement_of' => [
        'description' => 'Plain text describing the legacy sites this one replaces',
        'type'        => 'text',
      ],
      'template_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => false,
      ],
      'is_template' => [
        'description' => "Is this site a template site",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'uid' => [
        'description' => "Account owner",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'ts_created' => [
        'decription'  => "Creation date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'ts_changed' => [
        'decription'  => "Last updated time (state changed)",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
    ],
    'foreign keys' => [
      'uid' => [
        'table'   => 'users',
        'columns' => ['uid' => 'uid'],
      ],
      'template_id' => [
        'table'   => 'ucms_site',
        'columns' => ['template_id' => 'id'],
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['ucms_site_access'] = [
    'description' => 'Sites webmasters',
    'fields' => [
      'site_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'uid' => [
        'description' => "Webmaster",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'site_id' => [
        'table'   => 'ucms_site', 
        'columns' => ['site_id' => 'id'],
      ],
      'uid' => [
        'table'   => 'users', 
        'columns' => ['uid' => 'uid'],
      ],
    ],
    'primary key' => ['site_id', 'uid'],
  ];

  $schema['ucms_site_node'] = [
    'description' => 'Sites nodes',
    'fields' => [
      'site_id' => [
        'description' => "Site identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'nid' => [
        'description' => "Node identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'site_id' => [
        'table'   => 'ucms_site',
        'columns' => ['site_id' => 'id'],
      ],
      'nid' => [
        'table'   => 'node',
        'columns' => ['nid' => 'nid'],
      ],
    ],
    'primary key' => ['site_id', 'nid'],
  ];

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function ucms_site_schema_alter(&$schema) {

  if (isset($schema['menu_custom'])) {
    $schema['menu_custom']['fields']['site_id'] = [
      'description' => "Site identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
    ];
    $schema['menu_custom']['foreign keys']['site_id'] = [
      'table'   => 'ucms_site',
      'columns' => ['site_id' => 'id'],
    ];
  }

  if (isset($schema['node'])) {
    $schema['node']['fields']['is_global'] = [
      'description' => "Does this node belongs to the global base",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ];
    $schema['node']['fields']['is_flagged'] = [
      'description' => "Does this node is marked as innapropriate",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 0,
    ];
    $schema['node']['fields']['is_clonable'] = [
      'description' => "Does this node is clonable",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ];
  }
}

/**
 * Adds missing database table columns.
 */
function ucms_site_install_schema_fix() {

  // Add {node}.is_global column.
  if (db_table_exists('node') && !db_field_exists('node', 'is_global')) {
    db_add_field('node', 'is_global', [
      'description' => "Does this node belongs to the global base",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ]);
  }
  // Add {node}.is_flagged column.
  if (db_table_exists('node') && !db_field_exists('node', 'is_flagged')) {
    db_add_field('node', 'is_flagged', [
      'description' => "Does this node is marked as innapropriate",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 0,
    ]);
  }
  // Add {node}.is_clonable column.
  if (db_table_exists('node') && !db_field_exists('node', 'is_clonable')) {
    db_add_field('node', 'is_clonable', [
      'description' => "Does this node is clonable",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ]);
  }

  // Adds {menu_custom}.site_id column.
  if (db_table_exists('menu_custom') && !db_field_exists('menu_custom', 'site_id')) {
    db_add_field('menu_custom', 'site_id', [
      'description' => "Site identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }

  // Add a few constraints.
  // Hopefully, this syntax should work on both PostgreSQL and MySQL although
  // this is pure coincidence, this is great for us.
  $constraints = [
    "ALTER TABLE {ucms_site_node} ADD CONSTRAINT FOREIGN KEY (site_id) REFERENCES {ucms_site} (id) ON DELETE CASCADE",
    "ALTER TABLE {ucms_site_access} ADD CONSTRAINT FOREIGN KEY (site_id) REFERENCES {ucms_site} (id) ON DELETE CASCADE",
  ];
  foreach ($constraints as $statement) {
    db_query($statement);
  }
}

/**
 * Adds missing database table columns.
 */
function ucms_site_uninstall_schema_fix() {
  if (db_table_exists('menu_custom') && db_field_exists('menu_custom', 'is_global')) {
    db_drop_field('menu_custom', 'site_id');
  }
  if (db_table_exists('node') && db_field_exists('node', 'is_global')) {
    db_drop_field('node', 'is_global');
  }
}

/**
 * Implements hook_module_installed().
 */
function ucms_site_module_installed($modules) {
  ucms_site_install_schema_fix();
}

/**
 * Implements hook_install().
 */
function ucms_site_install() {
  ucms_site_install_schema_fix();
}

/**
 * Implements hook_install().
 */
function ucms_site_uninstall() {
  ucms_site_uninstall_schema_fix();
}

/**
 * Fixes database constraints.
 */
function ucms_site_update_7002() {
  ucms_site_install_schema_fix();
}
