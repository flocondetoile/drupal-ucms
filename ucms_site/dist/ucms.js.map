{"version":3,"file":"ucms.js","sourceRoot":"/var/www/chlovet/web/sites/all/modules/composer/drupal-ucms/ucms_site/dist/","sources":["ucms_site/js/dragsources.ts","ucms_tree/js/behavior.ts","ucms_tree/js/tree.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Everything you ever dreamed of for using drag'n'drop.\n *\n * @todo this should be moved out into the Dragula module.\n */\nnamespace DragSources {\n\n    export const DATA_BUNDLES = \"data-allowed-bundles\";\n    export const DATA_ITEM_BUNDLE = \"data-item-bundle\";\n    export const DATA_ITEM_ID = \"data-item-id\";\n    export const DATA_ITEM_TYPE = \"data-item-type\";\n    export const SELECTOR_SOURCES = \"[data-layout-source=\\\"1\\\"]\";\n\n    /**\n     * Represents a potential source\n     */\n    export class Source {\n        readonly element: Element;\n\n        /**\n         * Default constructor\n         */\n        constructor(element: Element) {\n            this.element = element;\n        }\n    }\n\n    /**\n     * Find all potential sources in document, in order to make it\n     * easier for everybody, we re-use the phplayout and ucms sources\n     * so it'll work globally transparently.\n     */\n    export function findAllSourcesInDocument(): Source[] {\n        const sources: Source[] = [];\n\n        for (let element of <any>document.querySelectorAll(SELECTOR_SOURCES)) {\n            sources.push(new Source(element));\n        }\n\n        return sources;\n    }\n\n    /**\n     * Find all potential sources in context, in order to make it\n     * easier for everybody, we re-use the phplayout and ucms sources\n     * so it'll work globally transparently.\n     */\n    export function findAllSourcesIn(context: Document | Element): Source[] {\n        const sources: Source[] = [];\n\n        for (let element of <any>context.querySelectorAll(SELECTOR_SOURCES)) {\n            sources.push(new Source(element));\n        }\n\n        return sources;\n    }\n\n    /**\n     * Check if item matches the spec, if nothing given for a spec, only\n     * ensures that the item is an item\n     */\n    export function elementMatches(element: Element, itemType?: string, allowedBundles?: string[]): boolean {\n        if (!element.hasAttribute(DATA_ITEM_ID) || !element.hasAttribute(DATA_ITEM_TYPE)) {\n            return false;\n        }\n\n        if (itemType) {\n            if (itemType !== element.getAttribute(DATA_ITEM_TYPE)) {\n                return false;\n            }\n        }\n\n        if (allowedBundles) {\n            if (!element.hasAttribute(DATA_ITEM_BUNDLE)) {\n                return false;\n            }\n            const bundle = element.getAttribute(DATA_ITEM_BUNDLE);\n            if (bundle) {\n                return -1 !== allowedBundles.indexOf(bundle);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","\n// @todo not sure it meant to be used that way\ndeclare const Drupal: any;\n\nDrupal.behaviors.UcmsTree = {\n    attach: function(context: Document | Element | any) {\n\n        // This should not happen, but some Drupal module will attempt\n        // attaching items on jQuery selectors instead of DOM elements.\n        if (!context.querySelectorAll) {\n            if (context.get) {\n                context = <Element>context.get(0);\n            } else {\n                return;\n            }\n        }\n\n        for (let node of <any>context.querySelectorAll(UcmsTree.SELECTOR_WIDGET)) {\n            UcmsTree.initializeWidget(node);\n        }\n\n        UcmsTree.intializeSources(DragSources.findAllSourcesIn(context));\n    }\n};\n","/**\n * µNodeReference Dragula based code.\n */\nnamespace UcmsTree {\n\n    export const SELECTOR_ITEM = \"[data-mlid]\";\n    export const SELECTOR_ROOT = \"[data-menu]\";\n    export const SELECTOR_WIDGET = \"#ucms-tree-tree-form\";\n\n    const liveWidgets: dragula.Drake[] = [];\n\n    /**\n     * Default item template\n     */\n    const TEMPLATE_ITEM = '<li data-item-type=\"node\" data-item-id=\"__ITEM_ID__\">'\n        + '<div class=\"tree-item clearfix\">'\n        + '<input class=\"form-control form-text\" value=\"__TITLE__\" maxlength=\"128\" type=\"text\"/>'\n        + '<span class=\"glyphicon glyphicon-remove\"></span>'\n        + '</div>'\n        + '<ol class=\"empty\"></ol>'\n        + '</li>'\n    ;\n\n    /**\n     * Attach additional behaviors\n     */\n    function attachAdditionalItemBehaviors(form: Element, context: Element): void {\n        // Attach on change behavior for input fields\n        for (let input of <any>context.querySelectorAll(\"input[type=\\\"text\\\"]\")) {\n            (<HTMLInputElement>input).onchange = () => updateValue(form);\n        }\n    }\n\n    /**\n     * Create new item\n     */\n    function createItem(form: Element, element: Element, drake: dragula.Drake): Element {\n        // Item id is mandatory, we now we have one since the item\n        // was actually acceptable by dragula\n        const itemId = <string>element.getAttribute(DragSources.DATA_ITEM_ID);\n\n        // Attempt to dynamically find a title\n        let title: string = \"\";\n        for (let tagName of [\"h1\", \"h2\", \"h3\", \"h4\"]) {\n            const node = element.querySelector(tagName);\n            if (node && node.textContent) {\n                title = <string>node.textContent;\n                break;\n            }\n        }\n\n        const wrapper = document.createElement('div');\n        const text = TEMPLATE_ITEM.replace(\"__ITEM_ID__\", itemId).replace(\"__TITLE__\", title).trim();\n        wrapper.innerHTML = text;\n\n        const innerContainer = wrapper.querySelector(\"ol\");\n        if (innerContainer) {\n            drake.containers.push(innerContainer);\n        }\n\n        attachAdditionalItemBehaviors(form, wrapper);\n\n        return <Element>wrapper.childNodes[0];\n    }\n\n    /**\n     * Update value for form\n     */\n    function updateValue(form: Element) {\n        const hiddenField = form.querySelector(\"input[name=\\\"values\\\"]\");\n        if (!hiddenField) {\n            throw \"Cannot update form state\";\n        }\n\n        // Find root\n        const root = form.querySelector(\"ol.sortable\");\n        if (!root) {\n            throw \"Could not find menu root\";\n        }\n\n        var increment = 0;\n        const value: any[] = [];\n\n        // Traverse traverse all children recursively\n        const recurse = (parent: Element, parentId: string) => {\n            for (let child of <any>parent.childNodes) {\n                if (child instanceof Element && DragSources.elementMatches(child, \"node\")) {\n\n                    // Find item title\n                    const titleNode = child.querySelector(\"input[type=\\\"text\\\"]\");\n                    let title: string;\n                    if (titleNode instanceof HTMLInputElement) {\n                        title = titleNode.value;\n                    } else {\n                        title = \"\";\n                    }\n                    const itemType = <string>child.getAttribute(DragSources.DATA_ITEM_TYPE);\n                    const itemId = <string>child.getAttribute(DragSources.DATA_ITEM_ID);\n\n                    // Find parent identifier, if none force one\n                    let id = child.getAttribute(\"data-mlid\");\n                    // Reattribute a new identifier to previously created items\n                    if (!id || \"new_\" === id.substr(0, 4)) {\n                        increment = increment + 1;\n                        id = \"new_\" + increment;\n                        child.setAttribute(\"data-mlid\", id);\n                    }\n\n                    // Push new value and proceed\n                    value.push(<any>{\n                        item_type: itemType,\n                        item_id: itemId,\n                        parent_id: parentId,\n                        id: id,\n                        title: title\n                    });\n\n                    const sub = child.querySelector(\"ol\");\n                    if (sub) {\n                        recurse(sub, id);\n                    }\n                }\n            }\n        };\n\n        recurse(root, \"\");\n\n        hiddenField.setAttribute(\"value\", JSON.stringify(value));\n    }\n\n    /**\n     * Sources have potentially been added to the DOM\n     */\n    export function intializeSources(sources: DragSources.Source[]): void {\n        if (!liveWidgets.length) {\n            return;\n        }\n        // No sources mean that the widgets cannot work.\n        if (!sources.length) {\n            return;\n        }\n\n        for (let source of sources) {\n            const element = source.element;\n            if (element.hasAttribute(\"data-tree-enabled\")) {\n                continue;\n            }\n            element.setAttribute(\"data-tree-enabled\", \"1\");\n            for (let drake of liveWidgets) {\n                drake.containers.push(element);\n            }\n        }\n    }\n\n    /**\n     * Initialiaze a single widget\n     */\n    export function initializeWidget(form: Element): void {\n\n        const sources: Element[] = [];\n\n        var root = <Element>form.querySelector(SELECTOR_ROOT);\n        if (!root) {\n            throw \"Could not find root item\";\n        }\n\n        for (let item of <any>form.querySelectorAll(SELECTOR_ITEM)) {\n            // Find inner droppable\n            let innerContainer = <Element>(<Element>item).querySelector(\"ol\");\n\n            // Add an empty zone for dropping if there's no child\n            if (!innerContainer) {\n                innerContainer = document.createElement('ol');\n                innerContainer.setAttribute(\"class\", \"empty\");\n                (<Element>item).appendChild(innerContainer);\n            }\n\n            sources.push(innerContainer);\n        }\n        sources.push(root);\n\n        // Attach original behaviors\n        attachAdditionalItemBehaviors(form, form);\n\n        // Populate initial array else any form submission would result in\n        // potential data loss for non empty trees\n        updateValue(form);\n\n        const drake = dragula(sources, {\n            copy: (element: Element, source: Element) => \"ol\" !== source.tagName.toLowerCase(),\n            accepts: (element: Element, target: Element) => \"ol\" === target.tagName.toLowerCase() && DragSources.elementMatches(element, \"node\"),\n            // invalid: (element: Element) => !$(element).closest('[data-item-type]').length,\n            revertOnSpill: true,\n            removeOnSpill: false,\n            direction: 'vertical'\n        });\n\n        drake.on(\"drop\", (element: Element, target: Element, source: Element) => {\n            if (\"ol\" === source.tagName.toLowerCase()) {\n                // If source is empty, add the \"empty\" class onto the ol\n                if (!source.childElementCount) {\n                    source.classList.add(\"empty\");\n                }\n            } else {\n                const item = createItem(form, element, drake);\n                if (element.parentNode) {\n                    element.parentNode.replaceChild(item, element);\n                }\n            }\n            // In all cases, if the target was empty, remove the empty class\n            target.classList.remove(\"empty\");\n            // Update the hidden field\n            updateValue(form);\n        });\n\n        liveWidgets.push(drake);\n    }\n}\n"]}