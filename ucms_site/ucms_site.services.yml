services:

  # Site storage responsible for loading and updating site data
  ucms_site.storage:
    public: false
    class: MakinaCorpus\Ucms\Site\SiteStorage
    arguments: ["@database", "@event_dispatcher"]

  # Site access helper
  ucms_site.access:
    public: false
    class: MakinaCorpus\Ucms\Site\SiteAccessService
    arguments: ["@database", "@entity.manager"]

  # Site manager, in all cases, it the component you want as dependency
  ucms_site.manager:
    class: MakinaCorpus\Ucms\Site\SiteManager
    arguments: ["@ucms_site.storage", "@ucms_site.access", "@database"]

  # Node dispatcher, handles node attach/detach/clone to sites
  ucms_site.node_dispatcher:
    class: MakinaCorpus\Ucms\Site\NodeDispatcher
    arguments: ["@database", "@ucms_site.manager", "@entity.manager"]

  ucms_site.admin.datasource:
    class: MakinaCorpus\Ucms\Site\Page\SiteAdminDatasource
    arguments: ["@database", "@ucms_site.manager"]

  ucms_site.site_action_provider:
    public: false
    class: MakinaCorpus\Ucms\Site\Action\SiteActionProvider
    arguments: ["@ucms_site.manager", "@module_handler"]
    tags: [{name: ucms_dashboard.action_provider}]

  ucms_site.node_action_provider:
    public: false
    class: MakinaCorpus\Ucms\Site\Action\NodeActionProvider
    arguments: ["@ucms_site.manager"]
    tags: [{name: ucms_dashboard.action_provider}]

  ucms_site.context_pane_event_listener:
    class: MakinaCorpus\Ucms\Site\EventDispatcher\ContextPaneEventListener
    arguments: ["@ucms_dashboard.action_provider_registry"]
    tags: [{name: event_listener, event: ucms_dashboard.context_init}]

  ucms_site.site_event_listener:
    class: MakinaCorpus\Ucms\Site\EventDispatcher\SiteEventListener
    arguments: ["@ucms_site.manager"]
    tags:
      - {name: event_listener, event: "site:create"}
      - {name: event_listener, event: "site:save"}
