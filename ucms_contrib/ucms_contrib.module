<?php
/**
 * @file
 * UCMS  - Contribution.
 *
 * This module provides a full UI based upon drag'n'drop for editing content
 * and manipulating layouts.
 */

/**
 * View mode for content display.
 */
const UCMS_VIEW_MODE_CONTENTADMIN = 'contentadmin';

/**
 * View mode for cart display.
 */
const UCMS_VIEW_MODE_FAVORITE = 'favorite';

/**
 * Image style for search.
 */
const UCMS_STYLE_CONTENTADMIN = 'contentadmin';

/**
 * Image style for favorite.
 */
const UCMS_STYLE_FAVORITE = 'favorite';

/**
 * Implements hook_boot().
 */
function ucms_contrib_boot() {
  if (!module_exists('composer_manager')) {
    if (!@include_once __DIR__ . '/../vendor/autoload.php') {
      watchdog(__FUNCTION__, "Missing composer autoload.php file", [], WATCHDOG_ERROR);
    }
  }
}

/**
 * Implements hook_menu().
 */
function ucms_contrib_menu() {
  $items = [];

  // Main administration pages.
  $items['admin/contribute'] = [
    'title'             => "Content management",
    'page callback'     => 'ucms_contrib_admin_content_page',
    'page arguments'    => ['text'],
    'access arguments'  => ['access ucms content overview'],
    'file'              => 'ucms_contrib.pages.inc',
  ];
  // @todo Use ucms_contrib_tab_list().
  $items['admin/contribute/text'] = [
    'title'             => "Content",
    'type'              => MENU_DEFAULT_LOCAL_TASK,
  ];
  $items['admin/contribute/media'] = [
    'title'             => "Media",
    'page callback'     => 'ucms_contrib_admin_content_page',
    'page arguments'    => ['media'],
    'access arguments'  => ['access ucms content overview'],
    'file'              => 'ucms_contrib.pages.inc',
    'type'              => MENU_LOCAL_TASK,
  ];

  // Site configuration.
  $items['admin/structure/contribute'] = [
    'title'             => "Contribution user interface",
    'description'       => "Manage content types categorisation and how the main contribution user interface will look like and behave.",
    'page callback'     => 'drupal_get_form',
    'page arguments'    => ['ucms_contrib_admin_structure_form'],
    'access arguments'  => ['administer content types'],
    'file'              => 'ucms_contrib.admin.inc',
    'type'              => MENU_NORMAL_ITEM,
  ];

  // Cart operations.
  $items['admin/cart/%node/add/nojs'] = [
    'title'             => "Content",
    'page callback'     => 'ucms_contrib_ajax_favorite_add',
    'page arguments'    => [2],
    'access arguments'  => ['use favorites'],
    'file'              => 'ucms_contrib.ajax.inc',
  ];
  $items['admin/cart/%node/remove/nojs'] = [
    'title'             => "Content",
    'page callback'     => 'ucms_contrib_ajax_favorite_remove',
    'page arguments'    => [2],
    'access arguments'  => ['use favorites'],
    'file'              => 'ucms_contrib.ajax.inc',
  ];

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function ucms_contrib_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  // Add node/add links on the content pages.
  if (preg_match('@^admin/contribute.*$@', $root_path)) {
    $tab = arg(2);
    if (null === $tab) {
      $tab = 'text';
    }
    if ($tab) {
      if ($types = variable_get('ucms_contrib_tab_' . $tab . '_type')) {
        $names = node_type_get_names();
        foreach ($types as $type) {
          if (node_access('create', $type)) {
            $data['actions']['output'][] = array(
              '#theme' => 'menu_local_action',
              '#link' => [
                'href'  => 'node/add/' . $type,
                'title' => $names[$type],
                'query' => drupal_get_destination(),
              ],
            );
          }
        }
      }
    }
  }
}


/**
 * Implements hook_permission().
 */
function ucms_contrib_permission() {
  return [
    'use favorites' => [
      'title' => "Access the favorites feature",
    ],
    'access ucms content overview' => [
      'title' => "Access the UCMS content overview page",
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function ucms_contrib_theme() {
  return [
    'ucms_contrib_cart' => [
      'variables' => ['account' => null, 'items' => [], 'actions' => null],
      'template'  => 'ucms-contrib-cart',
    ],
    'ucms_contrib_content_page' => [
      'variables' => [
        'favorites' => null,
        'account'   => null,
        'items'     => [],
        'facets'    => [],
        'search'    => null,
        'pager'     => null,
      ],
      'template'  => 'ucms-contrib-content-page',
    ],
  ];
}

/**
 * Implements hook_page_build().
 */
function ucms_contrib_page_build(&$page) {
  if (!path_is_admin(current_path()) && user_access('use favorites')) {
    // @todo Maybe later, render this using AJAX?
    $page['page_top']['ucms_cart'] = ucms_contrib_favorite_render();
    _ucms_contrib_render_attach($page['page_top']['ucms_cart']);
  }
}

/**
 * Implements hook_preprocess_page().
 */
function ucms_contrib_preprocess_page(&$variables) {
  if (!path_is_admin(current_path()) && user_access('use favorites')) {
    $variables['title_prefix']['layout_edit'] = drupal_get_form('ucms_layout_edit_form');
  }
}

/**
 * Append CSS and JS to #attached on selected element.
 */
function _ucms_contrib_render_attach(&$build) {
  $build['#attached']['library'][] = array('system', 'ui.droppable');
  $build['#attached']['library'][] = array('system', 'ui.draggable');
  $build['#attached']['library'][] = array('system', 'ui.sortable');
  $build['#attached']['css'][] = drupal_get_path('module', 'ucms_contrib') . '/ucms_contrib.css';
  $build['#attached']['js'][] = drupal_get_path('module', 'ucms_contrib') . '/ucms_contrib.js';
}

/**
 * Implements hook_entity_info_alter().
 */
function ucms_contrib_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'][UCMS_VIEW_MODE_CONTENTADMIN] = [
    'label' => t('Content admin display'),
    'custom settings' => false,
  ];
  $entity_info['node']['view modes'][UCMS_VIEW_MODE_FAVORITE] = [
    'label' => t('Favorite in cart'),
    'custom settings' => false,
  ];
}

/**
 * Implements hook_image_default_styles().
 */
function ucms_contrib_image_default_styles() {
  return [
    UCMS_STYLE_CONTENTADMIN => [
      'effects' => [[
        'name' => 'image_scale_and_crop',
        'data' => [
          'width'   => 285, // grid3
          'height'  => 285,
          'upscale' => 1,
        ],
        'weight' => 0,
      ]],
    ],
    UCMS_STYLE_FAVORITE => [
      'effects' => [[
        'name' => 'image_scale_and_crop',
        'data' => [
          'width'   => 42, // small
          'height'  => 42,
          'upscale' => 1,
        ],
        'weight' => 0,
      ]],
    ],
  ];
}

/**
 * Implements hook_form().
 */
function ucms_contrib_forms($form_id, $args) {
  // This implementation allows to use the same form more than once on the
  // same page, see drupal_get_form() related calls. This is ugly but this
  // is the right way to do it.
  if (0 === strpos($form_id, 'ucms_contrib_favorite_add_form')) {
    require_once __DIR__ . '/ucms_contrib.pages.inc';
    return [$form_id => ['callback' => 'ucms_contrib_favorite_add_form']];
  } else if (0 === strpos($form_id, 'ucms_contrib_favorite_remove_form')) {
    require_once __DIR__ . '/ucms_contrib.pages.inc';
    return [$form_id => ['callback' => 'ucms_contrib_favorite_remove_form']];
  }
}

/**
 * Get contribution interface tab list.
 *
 * @return string[]
 */
function ucms_contrib_tab_list() {
  return [
    'text'  => t("Content"),
    'media' => t("Media"),
  ];
}

/**
 * Implements hook_node_view_alter().
 *
 * Removes links from nodes when in build modes used for back office.
 */
function ucms_contrib_node_view_alter(&$build) {
  switch ($build['#view_mode']) {

    case UCMS_VIEW_MODE_CONTENTADMIN:
    case UCMS_VIEW_MODE_FAVORITE:
      $build['links']['#access'] = false;
      break;
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Removes submitted information and adds necessary stuff for JS.
 */
function ucms_contrib_preprocess_node(&$variables) {
  switch ($variables['view_mode']) {

    case UCMS_VIEW_MODE_CONTENTADMIN:
    case UCMS_VIEW_MODE_FAVORITE:
      $variables['submitted'] = null;
      break;
  }
}

/**
 * Add content to favorites.
 *
 * @param int $nid
 * @param int|stdClass $account
 *
 * @return boolean
 */
function ucms_contrib_favorite_add($nid, $account = null) {

  if (!$account) {
    $account = $GLOBALS['user'];
  }
  if (is_object($account)) {
    $account = $account->uid;
  }

  $exists = (bool)db_query("SELECT 1 FROM {ucms_contrib_cart} WHERE nid = :nid AND uid = :uid", [
    ':nid' => $nid,
    ':uid' => $account,
  ])->fetchField();

  if ($exists) {
    return false;
  }

  db_merge('ucms_contrib_cart')
    ->key([
      'nid' => $nid,
      'uid' => $account,
    ])
    ->execute()
  ;

  return true;
}

/**
 * Remove content from favorites.
 *
 * @param int $nid
 * @param int|stdClass $account
 */
function ucms_contrib_favorite_remove($nid, $account = null) {

  if (!$account) {
    $account = $GLOBALS['user'];
  }
  if (is_object($account)) {
    $account = $account->uid;
  }

  db_delete('ucms_contrib_cart')
    ->condition('nid', $nid)
    ->condition('uid', $account)
    ->execute()
  ;
}

/**
 * List favorite content.
 *
 * @param int|stdClass $account
 *
 * @return int[]
 *   Ordered list of node identifiers.
 */
function ucms_contrib_favorite_list($account = null) {

  if (!$account) {
    $account = $GLOBALS['user']->uid;
  }
  if (is_object($account)) {
    $account = $account->uid;
  }

  $q = db_select('ucms_contrib_cart', 'c');
  $q->fields('c', ['nid']);
  $q->join('node', 'n', "n.nid = c.nid");
  $q->condition('c.uid', $account);

  return $q
    //->extend('PagerDefault')
    //->limit(12)
    ->addTag('node_access')
    ->execute()
    ->fetchCol()
  ;
}

/**
 * Render one's favorite cart.
 *
 * @param int|stdClass $account
 *
 * @return []
 *   drupal_render() friendly structure.
 */
function ucms_contrib_favorite_render($account = null) {

  if (!$account) {
    $account = $GLOBALS['user'];
  }
  if (is_object($account)) {
    $account = $account->uid;
  }

  $ret = [
    '#theme'    => 'ucms_contrib_cart',
    '#account'  => $account,
    '#items'    => [],
  ];

  $nidList = ucms_contrib_favorite_list($account);

  if ($nidList) {
    $view = node_view_multiple(node_load_multiple($nidList), UCMS_VIEW_MODE_FAVORITE);
    foreach (element_children($view['nodes']) as $nid) {
      $ret['#items'][$nid] = $view['nodes'][$nid];
      $ret['#items'][$nid]['remove'] = drupal_get_form('ucms_contrib_favorite_remove_form_' . $nid, $nid);
    }
  }

  return $ret;
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_ucms_contrib_content_page(&$variables) {
  foreach ($variables['facets'] as $delta => $facet) {
    $variables['facets'][$delta] = [
      '#theme' => 'ucms_search_facet',
      '#facet' => $facet,
    ];
  }
}
