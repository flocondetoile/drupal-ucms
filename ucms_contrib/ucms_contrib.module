<?php
/**
 * @file
 * UCMS  - Contribution.
 *
 * This module provides a full UI based upon drag'n'drop for editing content
 * and manipulating layouts.
 *
 * @todo
 *   - Keep cart items order same as insert
 *   - Add other possible cart view modes (grid, list, ...)
 *   - Add other possible UI view modes (grid, list, ...)
 *   - Add UI sorting
 */

/**
 * View mode for content display.
 */
const UCMS_VIEW_MODE_CONTENTADMIN = 'contentadmin';

/**
 * View mode for cart display.
 */
const UCMS_VIEW_MODE_FAVORITE = 'favorite';

/**
 * Image style for search.
 */
const UCMS_STYLE_CONTENTADMIN = 'contentadmin';

/**
 * Image style for favorite.
 */
const UCMS_STYLE_FAVORITE = 'favorite';

/**
 * Implements hook_menu().
 */
function ucms_contrib_menu() {
  $items = [];

  // Main administration pages.
  foreach (ucms_contrib_tab_list() as $key => $label) {
    $items['admin/dashboard/' . $key] = [
      'title'            => $label,
      'page callback'    => 'ucms_contrib_admin_content_page',
      'page arguments'   => [$key],
      'access arguments' => ['access ucms content overview'],
      'file'             => 'ucms_contrib.pages.inc',
    ];
  }

  // Node actions.
  $items['node/%node/publish'] = [
    'title'             => "Publish content",
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\Contrib\Form\NodePublish', 1],
    'access callback'   => 'node_access',
    'access arguments'  => ['update', 1],
    'type'              => MENU_CALLBACK,
  ];
  $items['node/%node/unpublish'] = [
    'title'             => "Unpublish content",
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\Contrib\Form\NodeUnpublish', 1],
    'access callback'   => 'node_access',
    'access arguments'  => ['update', 1],
    'type'              => MENU_CALLBACK,
  ];
  $items['node/%node/report'] = [
    'title'             => "Flag as inappropriate",
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\Contrib\Form\NodeFlag', 1],
    'access callback'   => 'node_access',
    'access arguments'  => ['view', 1],
    'type'              => MENU_CALLBACK,
  ];
  $items['node/%node/unreport'] = [
    'title'             => "Un-flag as innappropriate",
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\Contrib\Form\NodeUnflag', 1],
    'access callback'   => 'node_access',
    'access arguments'  => ['update', 1],
    'type'              => MENU_CALLBACK,
  ];

  // Site configuration.
  $items['admin/structure/content'] = [
    'title'             => "Contribution user interface",
    'description'       => "Manage content types categorisation and how the main contribution user interface will look like and behave.",
    'page callback'     => 'sf_dic_page_form',
    'page arguments'    => ['MakinaCorpus\Ucms\Contrib\Admin\NodeTabsForm'],
    'access arguments'  => ['administer content types'],
    'type'              => MENU_NORMAL_ITEM,
  ];

  // Cart operations.
  $items['admin/cart/%node/add/nojs'] = [
    'title'             => "Content",
    'page callback'     => 'ucms_contrib_ajax_favorite_add',
    'page arguments'    => [2],
    'access arguments'  => ['use favorites'],
    'file'              => 'ucms_contrib.ajax.inc',
  ];
  $items['admin/cart/%node/remove/nojs'] = [
    'title'             => "Content",
    'page callback'     => 'ucms_contrib_ajax_favorite_remove',
    'page arguments'    => [2],
    'access arguments'  => ['use favorites'],
    'file'              => 'ucms_contrib.ajax.inc',
  ];

  return $items;
}

/**
 * Implements hook_page_build().
 */
function ucms_contrib_page_build(&$page) {
  // @todo find a better place
  if (user_access('use favorites')) {
    $path = current_path();
    if ('admin/dashboard/content' === $path ||
        'admin/dashboard/media' === $path ||
        ucms_layout_context_get()->isTemporary()
    ){
      ucms_dashboard_context_get()
        ->addTab('cart', t("Cart"), 'shopping-cart')
        ->add(ucms_contrib_favorite_render(), 'cart')
      ;
    }
  }
}

/**
 * Implements hook_permission().
 */
function ucms_contrib_permission() {
  return [
    'use favorites' => [
      'title' => "Access the favorites feature",
    ],
    'access ucms content overview' => [
      'title' => "Access the UCMS content overview page",
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function ucms_contrib_theme() {
  return [
    'ucms_contrib_cart' => [
      'variables' => [
        'account' => null,
        'items'   => [],
        'actions' => null,
        'display' => null,
      ],
      'template'  => 'ucms-contrib-cart',
    ],
    'ucms_contrib_content_result_grid' => [
      'variables' => [
        'nodes'     => [],
        'view_mode' => UCMS_VIEW_MODE_CONTENTADMIN,
      ],
      'template'  => 'ucms-contrib-content-result-grid',
    ],
  ];
}

/**
 * Implements hook_preprocess_page().
 */
function ucms_contrib_preprocess_page(&$variables) {
  if (!path_is_admin(current_path()) && user_access('use favorites')) {
    $variables['title_prefix']['layout_edit'] = \Drupal::formBuilder()->getForm('MakinaCorpus\Ucms\Layout\Form\LayoutContextEditForm');
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function ucms_contrib_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes'][UCMS_VIEW_MODE_CONTENTADMIN] = [
    'label' => t('Content admin display'),
    'custom settings' => false,
  ];
  $entity_info['node']['view modes'][UCMS_VIEW_MODE_FAVORITE] = [
    'label' => t('Favorite in cart'),
    'custom settings' => false,
  ];
}

/**
 * Implements hook_image_default_styles().
 */
function ucms_contrib_image_default_styles() {
  return [
    UCMS_STYLE_CONTENTADMIN => [
      'effects' => [[
        'name' => 'image_scale_and_crop',
        'data' => [
          'width'   => 285, // grid3
          'height'  => 285,
          'upscale' => 1,
        ],
        'weight' => 0,
      ]],
    ],
    UCMS_STYLE_FAVORITE => [
      'effects' => [[
        'name' => 'image_scale_and_crop',
        'data' => [
          'width'   => 42, // small
          'height'  => 42,
          'upscale' => 1,
        ],
        'weight' => 0,
      ]],
    ],
  ];
}

/**
 * Get contribution interface tab list.
 *
 * @return string[]
 */
function ucms_contrib_tab_list() {
  return [
    'content' => "Content",
    'media'   => "Media",
  ];
}

/**
 * Implements hook_node_view_alter().
 *
 * Removes links from nodes when in build modes used for back office.
 */
function ucms_contrib_node_view_alter(&$build) {
  switch ($build['#view_mode']) {

    case UCMS_VIEW_MODE_CONTENTADMIN:
    case UCMS_VIEW_MODE_FAVORITE:
      $build['links']['#access'] = false;
      break;
  }
}

/**
 * Implements hook_preprocess_node().
 *
 * Removes submitted information and adds necessary stuff for JS.
 */
function ucms_contrib_preprocess_node(&$variables) {
  switch ($variables['view_mode']) {

    case UCMS_VIEW_MODE_CONTENTADMIN:
    case UCMS_VIEW_MODE_FAVORITE:
      $variables['submitted'] = null;
      break;
  }
}

/**
 * Render one's favorite cart.
 *
 * @param int|stdClass $account
 *
 * @return []
 *   drupal_render() friendly structure.
 */
function ucms_contrib_favorite_render($account = null) {

  if (!$account) {
    $uid = $GLOBALS['user']->uid;
  } else if (is_object($account)) {
    $uid = $account->uid;
  } else {
    $uid = (int)$account;
  }

  /* @var $cart \MakinaCorpus\Ucms\Contrib\CartStorage */
  $cart     = \Drupal::service('ucms_contrib.cart');
  $nidList  = $cart->listFor($uid);
  $nodes    = $nidList ? node_load_multiple($nidList) : [];

  $display = (new \MakinaCorpus\Ucms\Contrib\NodeCartDisplay())
    ->setParameterName('cd')
    ->prepareFromQuery($_GET)
  ;

  $ret = [
    '#theme'    => 'ucms_contrib_cart',
    '#account'  => $uid,
    '#display'  => $display->renderLinks(),
    '#items'    => $display->render($nodes),
  ];

  $ret['#attached']['library'][] = ['system', 'ui.droppable'];
  $ret['#attached']['library'][] = ['system', 'ui.draggable'];
  $ret['#attached']['library'][] = ['system', 'ui.sortable'];
  $ret['#attached']['library'][] = ['ucms_contrib', 'ucms_contrib'];

  return $ret;
}

/**
 * Implements hook_library().
 */
function ucms_contrib_library() {
  return [
    'ucms_contrib' => [
      'title'   => 'UCMS - Contrib',
      'version' => '0.1',
      'js'      => [
        drupal_get_path('module', 'ucms_contrib') . '/ucms_contrib.js' => [],
      ],
      'css'     => [
        drupal_get_path('module', 'ucms_contrib') . '/ucms_contrib.css' => [
          'type'  => 'file',
          'media' => 'screen',
        ],
      ],
    ],
  ];
}
