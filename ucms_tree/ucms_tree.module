<?php
/**
 * @file
 * UCMS Tree module.
 */

use MakinaCorpus\Ucms\Tree\Controller\TreeAdminController;

/**
 * Implements hook_menu().
 */
function ucms_tree_menu() {
  $items = [];

  $items['admin/dashboard/tree'] = [
    'title'             => "All trees",
    'page callback'     => 'sf_dic_page',
    'page arguments'    => [TreeAdminController::class . '::treeList'],
    'access callback'   => 'sf_dic_page_access',
    'access arguments'  => [TreeAdminController::class . '::accessMenuOverview'],
    'type'              => MENU_NORMAL_ITEM,
  ];
  $items['admin/dashboard/tree/add'] = [
    'title'             => 'Add new menu',
    'page callback'     => 'sf_dic_page',
    'page arguments'    => [TreeAdminController::class . '::menuAdd'],
    'access callback'   => 'sf_dic_page_access',
    'access arguments'  => [TreeAdminController::class . '::accessMenuAdd'],
    'type'              => MENU_CALLBACK | MENU_VISIBLE_IN_BREADCRUMB,
  ];
  $items['admin/dashboard/tree/%umenu'] = [
    'title'             => 'Edit menu',
    'page callback'     => 'sf_dic_page',
    'page arguments'    => [TreeAdminController::class . '::menuTree', 3],
    'access callback'   => 'sf_dic_page_access',
    'access arguments'  => [TreeAdminController::class . '::accessMenuTreeEdit', 3],
    'type'              => MENU_CALLBACK | MENU_VISIBLE_IN_BREADCRUMB,
  ];
  $items['admin/dashboard/tree/%umenu/edit'] = [
    'title'             => 'Edit menu',
    'page callback'     => 'sf_dic_page',
    'page arguments'    => [TreeAdminController::class . '::menuEdit', 3],
    'access callback'   => 'sf_dic_page_access',
    'access arguments'  => [TreeAdminController::class . '::accessMenuEdit', 3],
    'type'              => MENU_CALLBACK | MENU_VISIBLE_IN_BREADCRUMB,
  ];

  $items['node/add/here'] = [
    'title'             => 'Add content at position',
    'page callback'     => 'sf_dic_page',
    'page arguments'    => [TreeAdminController::class . '::addContentHere'],
    'access callback'   => true,
    'type'              => MENU_CALLBACK,
  ];

  return $items;
}

/**
 * Implements hook_permission().
 */
function ucms_tree_permission() {
  return [
    'administer my module' => [
      'title'       => 'Administer tree',
    ],
  ];
}

/**
 * Return role list for menus.
 *
 * @return string[]
 *   Keys are roles, values are localized human readable names.
 */
function ucms_tree_role_list() {
  return variable_get('ucms_tree_role_list', []);
}

/**
 * Implements hook_library().
 */
function ucms_tree_library() {
  $path = drupal_get_path('module', 'ucms_tree');
  return [
    'tree_edit' => [
      'title'   => 'Tree edit',
      'version' => '1.x',
      'css'     => [
        $path . '/ucms_tree.css' => [
          'type'  => 'file',
          'media' => 'screen',
        ],
      ],
      'dependencies' => [
        ['ucms_site', 'ucms']
      ],
    ],
  ];
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function ucms_tree_form_node_form_alter(&$form, &$form_state, $form_id) {

  if (!empty($_GET['menu_name'])) {
    // Verify access to menu
    $manager = ucms_site_manager();
    $site = $manager->getContext();
    $account = \Drupal::currentUser();

    $matches = [];
    if (!$site ||
        !preg_match('@\-(\d+)$@', $_GET['menu_name'], $matches) ||
        ($site->getId() !== (int) $matches[1]) ||
        !$manager->getAccess()->userIsWebmaster($account, $site)
    ) {
      drupal_access_denied();
      exit;
    }

    // Add GET parameters to form
    $form['menu'] = [
      '#tree' => TRUE,
    ];
    $form['menu']['name'] = [
      '#type'  => 'value',
      '#value' => $_GET['menu_name'],
    ];
    $form['menu']['parent'] = [
      '#type'  => 'value',
      '#value' => !empty($_GET['parent']) ? $_GET['parent'] : 0,
    ];
    $form['menu']['position'] = [
      '#type'  => 'value',
      '#value' => $_GET['position'],
    ];
  }
}

/**
 * Implements hook_node_insert().
 */
function ucms_tree_node_insert($node) {
  if (isset($node->menu) && isset($node->menu['name'])) {
    $treeManager = umenu_get_manager();

    try {
      $parentId = $node->menu['parent'] ?: null;
      $menu = $treeManager->getMenuStorage()->load($node->menu['name']);

      if ($parentId) {
        $treeManager->getItemStorage()->insertAsChild($parentId, $node->nid, $node->title);
      } else {
        $treeManager->getItemStorage()->insert($menu->getId(), $node->nid, $node->title);
      }
    } catch (\Exception $e) {
      drupal_set_message(t('There was an error saving the menu link.'), 'error');
      watchdog_exception(__FUNCTION__, $e);
    }
  }
}

/**
 * Implements hook_js_alter().
 */
function ucms_tree_js_alter(&$js) {
  if (preg_match('@^admin/dashboard/tree/(\d+)$@', current_path())) {
    $path = drupal_get_path('module', 'ucms_contrib') . '/ucms_contrib.js';
    if (isset($js[$path])) {
      unset($js[$path]);
    }
  }
}
