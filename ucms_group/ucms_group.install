<?php

/**
 * Implements hook_schema().
 */
function ucms_group_schema() {
  $schema = [];

  $schema['ucms_group'] = [
    'description' => 'Group definitions',
    'fields' => [
      'id' => [
        'description' => "Group identifier",
        'type'        => 'serial',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'title' => [
        'description' => 'Group title',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => true,
        'default'     => '',
      ],
      'is_ghost' => [
        'description' => "Default behavior for content visibility within this group",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 1,
      ],
      'is_meta' => [
        'description' => "Indicates which is the platform level default group, only one should have this to 1",
        'type'        => 'int',
        'size'        => 'tiny',
        'unsigned'    => true,
        'not null'    => true,
        'default'     => 0,
      ],
      'ts_created' => [
        'decription'  => "Creation date",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'ts_changed' => [
        'decription'  => "Last updated time (state changed)",
        'mysql_type'  => 'datetime',
        'pgsql_type'  => 'timestamp',
        'type'        => 'varchar',
        'length'      => 16,
        'not null'    => false,
      ],
      'attributes' => [
        'description' => "Arbitrary site attributes, that other modules may use, this module will ignore it",
        'type'        => 'text',
        'not null'    => false,
        'default'     => null,
      ],
    ],
    'primary key' => ['id'],
  ];

  $schema['ucms_group_user'] = [
    'description' => 'Group users mapping',
    'fields' => [
      'group_id' => [
        'description' => "Group identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
      'user_id' => [
        'description' => "User identifier",
        'type'        => 'int',
        'unsigned'    => true,
        'not null'    => true,
      ],
    ],
    'foreign keys' => [
      'group_id' => [
        'table'   => 'ucms_group',
        'columns' => ['group_id' => 'id'],
        'delete'  => 'cascade',
      ],
      'user_id' => [
        'table'   => 'users',
        'columns' => ['user_id' => 'uid'],
        'delete'  => 'cascade',
      ],
    ],
    'primary key' => ['group_id', 'user_id'],
  ];

  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function ucms_group_schema_alter(&$schema) {
  if (isset($schema['node'])) {
    $schema['node']['fields']['is_ghost'] = [
      'description' => "Is this node visible by non-members of the group it is attached to",
      'type'        => 'int',
      'size'        => 'tiny',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ];
    $schema['node']['fields']['group_id'] = [
      'description' => "Group identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ];
  }
  if (isset($schema['ucms_site'])) {
    $schema['ucms_site']['fields']['group_id'] = [
      'description' => "Group identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ];
  }
}

/**
 * Adds missing database table columns and constraints
 */
function ucms_group_install_schema_fix() {

  // Adds {node}.is_ghost column.
  if (db_table_exists('node') && !db_field_exists('node', 'is_ghost')) {
    db_add_field('node', 'is_ghost', [
      'description' => "Is this node visible by non-members of the group it is attached to",
      'type'        => 'int',
      'size'        => 'tiny',
      'unsigned'    => true,
      'not null'    => true,
      'default'     => 1,
    ]);
  }
  // Adds {node}.group_id column.
  if (db_table_exists('node') && !db_field_exists('node', 'group_id')) {
    db_add_field('node', 'group_id', [
      'description' => "Group identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }
  if (db_table_exists('node') && !db_constraint_exists('node', 'fk', 'node_group')) {
    db_constraint_add('node', 'fk', 'node_group', [
      'table'   => 'ucms_group',
      'columns' => ['group_id' => 'id'],
      'delete'  => 'set null'
    ]);
  }

  // Adds {ucms_site}.group_id column.
  if (db_table_exists('ucms_site') && !db_field_exists('ucms_site', 'group_id')) {
    db_add_field('ucms_site', 'group_id', [
      'description' => "Group identifier",
      'type'        => 'int',
      'unsigned'    => true,
      'not null'    => false,
      'default'     => null,
    ]);
  }
  if (db_table_exists('ucms_site') && !db_constraint_exists('ucms_site', 'fk', 'site_group')) {
    db_constraint_add('ucms_site', 'fk', 'site_group', [
      'table'   => 'ucms_group',
      'columns' => ['group_id' => 'id'],
      'delete'  => 'set null'
    ]);
  }
}

/**
 * Adds missing database table columns.
 */
function ucms_group_uninstall_schema_fix() {
  if (db_table_exists('node') && db_field_exists('node', 'is_ghost')) {
    db_drop_field('node', 'is_ghost');
  }
  if (db_table_exists('node') && db_field_exists('node', 'group_id')) {
    db_drop_field('node', 'group_id');
  }
}

/**
 * Implements hook_modules_installed().
 */
function ucms_group_modules_installed($modules) {
  ucms_group_install_schema_fix();
}

/**
 * Creates the default plateform-wide group.
 */
function ucms_group_install_default_group() {
  if (!db_query('SELECT 1 FROM {ucms_group} WHERE is_meta = 1')->fetchField()) {
    $id = db_insert('ucms_group')->fields([
      'title'      => "Default group",
      // This group cannot be deleted
      'is_meta'    => 1,
      // Per default, already existing content will no be visible
      'is_ghost'   => 1,
      'ts_created' => (new DateTime())->format('Y-m-d H:i:s'),
      'ts_changed' => (new DateTime())->format('Y-m-d H:i:s'),
    ])->execute();

    // Set all sites with no groups into this group
    db_query("UPDATE {ucms_site} SET group_id = ? WHERE group_id IS NULL", [$id]);
    // Give all nodes without any group to this group
    db_query("UPDATE {node} SET group_id = ? WHERE group_id IS NULL", [$id]);
  }
}

/**
 * Implements hook_enable().
 */
function ucms_group_install() {
  ucms_group_install_schema_fix();
  ucms_group_install_default_group();
  variable_set('node_access_rebuild_needed', 1);
}

/**
 * Implements hook_uninstall().
 */
function ucms_group_uninstall() {
  ucms_group_uninstall_schema_fix();
}

/**
 * Adds missing database table columns.
 */
function ucms_group_update_7001() {
  ucms_group_install_schema_fix();
}

/**
 * Creates the default plateform-wide group.
 */
function ucms_group_update_7002() {

  ucms_group_install_schema_fix();
  ucms_group_install_default_group();

  // Modify the {node}.is_ghost to be 1 per default
  db_change_field('node', 'is_ghost', 'is_ghost', [
    'description' => "Is this node visible by non-members of the group it is attached to",
    'type'        => 'int',
    'size'        => 'tiny',
    'unsigned'    => true,
    'not null'    => true,
    'default'     => 1,
  ]);

  // Update existing content to match default
  db_query("UPDATE {node} SET is_ghost = 1");
}

/**
 * Mark node access for rebuild.
 */
function ucms_group_update_7003() {
  variable_set('node_access_rebuild_needed', 1);
}
