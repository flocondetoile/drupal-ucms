<?php
/**
 * UCMS - Dashboard and fioritures.
 */

use MakinaCorpus\Ucms\Dashboard\Page\DatasourceInterface;
use MakinaCorpus\Ucms\Dashboard\Page\DisplayInterface;
use MakinaCorpus\Ucms\Dashboard\Page\Page;

/**
 * Use contextual pane permission.
 */
const UCMS_DASHBOARD_PERM_USE_CONTEXT_PANE = 'use contextual pane';

/**
 * Implements hook_permission().
 */
function ucms_dashboard_permission() {
  return [
    UCMS_DASHBOARD_PERM_USE_CONTEXT_PANE => [
      'title' => t("Use contextual pane"),
    ],
  ];
}

/**
 * Implements hook_menu().
 */
function ucms_dashboard_menu() {

  $items = [];

  $items['admin/dashboard'] = [
    'title'             => "Dashboard",
    'page callback'     => 'ucms_dashboard_page',
    'access arguments'  => ['access administration pages'],
    'type'              => MENU_NORMAL_ITEM,
    'file'              => 'ucms_dashboard.pages.inc',
  ];

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function ucms_dashboard_menu_alter(&$items) {

  // Remove all the unnecessary pages using the 'access administration pages'
  // or whatever else permission the users may have.
  foreach ([
    'admin/compact',
    'admin/config',
    'admin/config/content',
    'admin/config/development',
    'admin/config/media',
    'admin/config/regional',
    'admin/config/search',
    'admin/config/services',
    'admin/config/system',
    'admin/config/user-interface',
    'admin/config/workflow',
    'admin/index',
    'admin/reports/status/rebuild',
    'admin/structure',
  ] as $path) {
    $items[$path]['access arguments'] = ['non existing permission'];
  }

  // Single override where we change the 'admin' home page.
  $items['admin'] = [
    'title'             => "Administration",
    'page callback'     => 'ucms_dashboard_admin_redirect',
    'access arguments'  => ['access administration pages'],
    'type'              => MENU_CALLBACK,
  ];
}

/**
 * Menu callback.
 */
function ucms_dashboard_admin_redirect() {
  drupal_goto('admin/dashboard');
}

/**
 * Fetch a specific page.
 *
 * Sad but true story, because we are not going to inject the controllers we
 * are forced to keep this in the procedural code, in order for page callbacks
 * to be able to use it.
 *
 * @param DatasourceInterface $datasource
 * @param DisplayInterface $display
 * @param string[] $suggestions
 *   An arbitrary number of string which will derivate the template suggestions
 *   for example, let's say you set here ['foo', 'bar'], the derivative template
 *   to use will be: 'ucms_dashboard-page-list--foo--bar'.
 *
 * @return Page
 */
function ucms_dashboard_page_get(DatasourceInterface $datasource, DisplayInterface $display, $suggestions) {
  return \Drupal::service('ucms_dashboard.page_factory')->get($datasource, $display, $suggestions);
}

/**
 * Get current context pane.
 *
 * @return \MakinaCorpus\Ucms\Dashboard\Context\ContextPane
 *
 * @deprecated
 *   Will be replaced by services one day.
 */
function ucms_dashboard_context_get() {
  return \Drupal::service('ucms_dashboard.context');
}


/**
 * Implements hook_theme().
 */
function ucms_dashboard_theme() {
  return [
    'ucms_dashboard_actions' => [
      'variables' => ['item' => null, 'actions' => [], 'mode' => 'link'],
      'template'  => 'ucms_dashboard-actions',
    ],
    'ucms_dashboard_context' => [
      'variables' => [
        'tabs'        => [],
        'items'       => [],
        'actions'     => [],
        'default_tab' => '',
      ],
      'template' => 'ucms_dashboard-context',
    ],
    'ucms_dashboard_page' => [
      'variables' => [],
      'template'  => 'ucms_dashboard-page',
    ],
    'ucms_dashboard_page_list' => [
      'variables' => [
        'display'     => null,
        'filters'     => [],
        'items'       => [],
        'search'      => null,
        'pager'       => null,
        'sort_field'  => null,
        'sort_order'  => null,
      ],
      'template' => 'ucms_dashboard-page-list',
    ],
    'ucms_dashboard_top' => [
      'variables' => [],
      'template'  => 'ucms_dashboard-top',
    ],
  ];
}

/**
 * Implements hook_page_build().
 */
function ucms_dashboard_page_build(&$page) {

  if (user_access(UCMS_DASHBOARD_PERM_USE_CONTEXT_PANE)) {

    $context = ucms_dashboard_context_get();

    $context->init();

    if (module_exists('ucms_notification')) {
      $context->addTab('notification', t("Notifications"), 'bell')
              ->add(notification_block_render($GLOBALS['user']), 'notification');
      // Set default tab on dashboard
      if (current_path() == 'admin/dashboard') {
        $context->setDefaultTab('notification');
      }
    }

    $actions = [];
    foreach ($context->getActions() as $list) {
      $actions[] = [
        '#theme'   => 'ucms_dashboard_actions',
        '#actions' => $list,
      ];
    }
    $page['page_top']['ucms_context_pane'] = [
      '#theme'       => 'ucms_dashboard_context',
      '#items'       => $context->getAll(),
      '#tabs'        => $context->getTabs(),
      '#default_tab' => $context->getDefaultTab(),
      '#actions'     => $actions,
      '#attached'    => [
        'library' => [['ucms_dashboard', 'ucms_dashboard']],
      ],
    ];
  }

  if (path_is_admin(current_path())) {
    $page['page_top']['ucms_dashboard_top'] = [
      '#theme' => 'ucms_dashboard_top',
    ];
  }
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_ucms_dashboard_page_list(&$variables) {
  /* @var $display \MakinaCorpus\Ucms\Dashboard\Page\DisplayInterface */
  $display = $variables['display'];
  $variables['displayView']   = $display->render($variables['items']);
  $variables['displayLinks']  = $display->renderLinks();
}

/**
 * Render item actions.
 *
 * @param array $variables
 */
function template_preprocess_ucms_dashboard_actions(&$variables) {
  foreach ($variables['actions'] as $key => $action) {
    /* @var $action \MakinaCorpus\Ucms\Dashboard\Action\Action */
    // Remove actions for which the path is the same.
    if (current_path() === $action->getURI()) {
      continue;
    }
    if ($action->isPrimary()) {
      $target = 'primary';
    } else {
      $target = 'secondary';
    }
    $item = [];
    $item['options']  = $action->getLinkOptions();
    $item['options'] += ['attributes' => []];
    if (isset($item['options']['attributes']['class'])) {
      $item['options']['attributes']['class'] = implode(' ', $item['options']['attributes']['class']);
    } else {
      $item['options']['attributes']['class'] = '';
    }
    $item['title']    = $action->getTitle();
    $item['href']     = $action->getURI();
    $item['priority'] = $action->getPriority();
    $item['icon']     = $action->getIcon();
    $variables[$target][$key] = $item;
  }
  foreach (['primary', 'secondary'] as $target) {
    if (isset($variables[$target])) {
      usort($variables[$target], function ($a, $b) {
        return $a['priority'] - $b['priority'];
      });
    }
  }
  if ($variables['mode']) {
    $variables['icon'] = $variables['mode'] === 'icon';
  }
}

/**
 * Implements hook_library().
 */
function ucms_dashboard_library() {
  return [
    'ucms_dashboard' => [
      'title'        => 'UCMS - Dashboard',
      'version'      => '0.1',
      'js'           => [drupal_get_path('module', 'ucms_dashboard') . '/ucms_dashboard.js' => [],],
      'css'          => [drupal_get_path('module', 'ucms_dashboard') . '/ucms_dashboard.css' => ['type'  => 'file', 'media' => 'screen']],
      'dependencies' => [['system', 'jquery.cookie']],
    ],
  ];
}
